/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.prgmdl.bn.analysis.distribution.analysis;

import java.util.*;
import sm.common.bn.analysis.distribution.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAMainResult(AMainResult node)
    {
        defaultCase(node);
    }

    public void caseATokTablePhrase(ATokTablePhrase node)
    {
        defaultCase(node);
    }

    public void caseAPayloadStructure(APayloadStructure node)
    {
        defaultCase(node);
    }

    public void caseADefFloat(ADefFloat node)
    {
        defaultCase(node);
    }

    public void caseASciFloat(ASciFloat node)
    {
        defaultCase(node);
    }

    public void caseADefMantisse(ADefMantisse node)
    {
        defaultCase(node);
    }

    public void caseADefExponent(ADefExponent node)
    {
        defaultCase(node);
    }

    public void caseADefDecimal(ADefDecimal node)
    {
        defaultCase(node);
    }

    public void caseAStructureLegend(AStructureLegend node)
    {
        defaultCase(node);
    }

    public void caseAIdVariable(AIdVariable node)
    {
        defaultCase(node);
    }

    public void caseAIdEvidence(AIdEvidence node)
    {
        defaultCase(node);
    }

    public void caseAMainClose(AMainClose node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTTable(TTable node)
    {
        defaultCase(node);
    }

    public void caseTSslash(TSslash node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    public void caseTNumexp(TNumexp node)
    {
        defaultCase(node);
    }

    public void caseTPipe(TPipe node)
    {
        defaultCase(node);
    }

    public void caseTQuote(TQuote node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTRBra(TRBra node)
    {
        defaultCase(node);
    }

    public void caseTP(TP node)
    {
        defaultCase(node);
    }

    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    public void caseTSpace(TSpace node)
    {
        defaultCase(node);
    }

    public void caseTNcl(TNcl node)
    {
        defaultCase(node);
    }

    public void caseTCl(TCl node)
    {
        defaultCase(node);
    }

    public void caseTNoise(TNoise node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
